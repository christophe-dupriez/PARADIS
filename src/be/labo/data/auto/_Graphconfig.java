package be.labo.data.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import be.labo.data.DataType;
import be.labo.data.GraphType;
import be.labo.data.Graphplace;
import be.labo.data.GroupOfUsers;
import be.labo.data.User;

/**
 * Class _Graphconfig was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Graphconfig extends CayenneDataObject {

    public static final String INDIVIDUALPLACE_PROPERTY = "individualplace";
    public static final String INDIVIDUALTYPE_PROPERTY = "individualtype";
    public static final String DATATYPES_PROPERTY = "datatypes";
    public static final String GRAPH_GROUP_PROPERTY = "graphGroup";
    public static final String GRAPH_PLACE_PROPERTY = "graphPlace";
    public static final String GRAPH_TYPE_PROPERTY = "graphType";
    public static final String GRAPH_USER_PROPERTY = "graphUser";

    public static final String ID_PK_COLUMN = "id";

    public void setIndividualplace(Boolean individualplace) {
        writeProperty(INDIVIDUALPLACE_PROPERTY, individualplace);
    }
    public Boolean getIndividualplace() {
        return (Boolean)readProperty(INDIVIDUALPLACE_PROPERTY);
    }

    public void setIndividualtype(Boolean individualtype) {
        writeProperty(INDIVIDUALTYPE_PROPERTY, individualtype);
    }
    public Boolean getIndividualtype() {
        return (Boolean)readProperty(INDIVIDUALTYPE_PROPERTY);
    }

    public void addToDatatypes(DataType obj) {
        addToManyTarget(DATATYPES_PROPERTY, obj, true);
    }
    public void removeFromDatatypes(DataType obj) {
        removeToManyTarget(DATATYPES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DataType> getDatatypes() {
        return (List<DataType>)readProperty(DATATYPES_PROPERTY);
    }


    public void addToGraphGroup(GroupOfUsers obj) {
        addToManyTarget(GRAPH_GROUP_PROPERTY, obj, true);
    }
    public void removeFromGraphGroup(GroupOfUsers obj) {
        removeToManyTarget(GRAPH_GROUP_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<GroupOfUsers> getGraphGroup() {
        return (List<GroupOfUsers>)readProperty(GRAPH_GROUP_PROPERTY);
    }


    public void addToGraphPlace(Graphplace obj) {
        addToManyTarget(GRAPH_PLACE_PROPERTY, obj, true);
    }
    public void removeFromGraphPlace(Graphplace obj) {
        removeToManyTarget(GRAPH_PLACE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Graphplace> getGraphPlace() {
        return (List<Graphplace>)readProperty(GRAPH_PLACE_PROPERTY);
    }


    public void addToGraphType(GraphType obj) {
        addToManyTarget(GRAPH_TYPE_PROPERTY, obj, true);
    }
    public void removeFromGraphType(GraphType obj) {
        removeToManyTarget(GRAPH_TYPE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<GraphType> getGraphType() {
        return (List<GraphType>)readProperty(GRAPH_TYPE_PROPERTY);
    }


    public void addToGraphUser(User obj) {
        addToManyTarget(GRAPH_USER_PROPERTY, obj, true);
    }
    public void removeFromGraphUser(User obj) {
        removeToManyTarget(GRAPH_USER_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<User> getGraphUser() {
        return (List<User>)readProperty(GRAPH_USER_PROPERTY);
    }


}
