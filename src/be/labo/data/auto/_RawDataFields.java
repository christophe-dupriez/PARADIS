package be.labo.data.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import be.labo.data.DataType;
import be.labo.data.RawTableField;
import be.labo.data.Rawtables;

/**
 * Class _RawDataFields was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _RawDataFields extends CayenneDataObject {

    public static final String DESCRIPTION_PROPERTY = "description";
    public static final String INHEADER_PROPERTY = "inheader";
    public static final String PRECISION_PROPERTY = "precision";
    public static final String FIELD_DATA_TYPE_PROPERTY = "fieldDataType";
    public static final String FIELD_TABLE_PROPERTY = "fieldTable";
    public static final String TABLES_PROPERTY = "tables";

    public static final String ID_PK_COLUMN = "id";

    public void setDescription(String description) {
        writeProperty(DESCRIPTION_PROPERTY, description);
    }
    public String getDescription() {
        return (String)readProperty(DESCRIPTION_PROPERTY);
    }

    public void setInheader(Byte inheader) {
        writeProperty(INHEADER_PROPERTY, inheader);
    }
    public Byte getInheader() {
        return (Byte)readProperty(INHEADER_PROPERTY);
    }

    public void setPrecision(Byte precision) {
        writeProperty(PRECISION_PROPERTY, precision);
    }
    public Byte getPrecision() {
        return (Byte)readProperty(PRECISION_PROPERTY);
    }

    public void setFieldDataType(DataType fieldDataType) {
        setToOneTarget(FIELD_DATA_TYPE_PROPERTY, fieldDataType, true);
    }

    public DataType getFieldDataType() {
        return (DataType)readProperty(FIELD_DATA_TYPE_PROPERTY);
    }


    public void addToFieldTable(RawTableField obj) {
        addToManyTarget(FIELD_TABLE_PROPERTY, obj, true);
    }
    public void removeFromFieldTable(RawTableField obj) {
        removeToManyTarget(FIELD_TABLE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<RawTableField> getFieldTable() {
        return (List<RawTableField>)readProperty(FIELD_TABLE_PROPERTY);
    }


    public void addToTables(Rawtables obj) {
        addToManyTarget(TABLES_PROPERTY, obj, true);
    }
    public void removeFromTables(Rawtables obj) {
        removeToManyTarget(TABLES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Rawtables> getTables() {
        return (List<Rawtables>)readProperty(TABLES_PROPERTY);
    }


}
