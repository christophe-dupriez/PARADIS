package be.labo.data.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import be.labo.data.Measure;
import be.labo.data.RawDataFields;
import be.labo.data.Rawtables;
import be.labo.data.SubType;

/**
 * Class _RawTableField was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _RawTableField extends CayenneDataObject {

    public static final String FIELD_MEASURE_PROPERTY = "fieldMeasure";
    public static final String FIELD_SUBTYPE_PROPERTY = "fieldSubtype";
    public static final String FIELD_TABLE_PROPERTY = "fieldTable";
    public static final String TABLE_FIELD_PROPERTY = "tableField";

    public static final String ID_PK_COLUMN = "id";

    public void addToFieldMeasure(Measure obj) {
        addToManyTarget(FIELD_MEASURE_PROPERTY, obj, true);
    }
    public void removeFromFieldMeasure(Measure obj) {
        removeToManyTarget(FIELD_MEASURE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Measure> getFieldMeasure() {
        return (List<Measure>)readProperty(FIELD_MEASURE_PROPERTY);
    }


    public void addToFieldSubtype(SubType obj) {
        addToManyTarget(FIELD_SUBTYPE_PROPERTY, obj, true);
    }
    public void removeFromFieldSubtype(SubType obj) {
        removeToManyTarget(FIELD_SUBTYPE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<SubType> getFieldSubtype() {
        return (List<SubType>)readProperty(FIELD_SUBTYPE_PROPERTY);
    }


    public void setFieldTable(Rawtables fieldTable) {
        setToOneTarget(FIELD_TABLE_PROPERTY, fieldTable, true);
    }

    public Rawtables getFieldTable() {
        return (Rawtables)readProperty(FIELD_TABLE_PROPERTY);
    }


    public void setTableField(RawDataFields tableField) {
        setToOneTarget(TABLE_FIELD_PROPERTY, tableField, true);
    }

    public RawDataFields getTableField() {
        return (RawDataFields)readProperty(TABLE_FIELD_PROPERTY);
    }


}
