package be.labo.data.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import be.labo.data.AuditMeasure;
import be.labo.data.Category;
import be.labo.data.DataType;
import be.labo.data.Machine;
import be.labo.data.NameMeasure;
import be.labo.data.Place;
import be.labo.data.RawTableField;

/**
 * Class _Measure was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Measure extends CayenneDataObject {

    public static final String RAWRECORD_PROPERTY = "rawrecord";
    public static final String VALUE_PROPERTY = "value";
    public static final String WHENMEASURED_PROPERTY = "whenmeasured";
    public static final String MEASURE_AUDIT_PROPERTY = "measureAudit";
    public static final String MEASURE_CATEGORY_PROPERTY = "measureCategory";
    public static final String MEASURE_FIELD_PROPERTY = "measureField";
    public static final String MEASURE_MACHINE_PROPERTY = "measureMachine";
    public static final String MEASURE_NAME_PROPERTY = "measureName";
    public static final String MEASURE_PLACE_PROPERTY = "measurePlace";
    public static final String MEASURE_TYPE_PROPERTY = "measureType";

    public static final String ID_PK_COLUMN = "id";

    public void setRawrecord(Long rawrecord) {
        writeProperty(RAWRECORD_PROPERTY, rawrecord);
    }
    public Long getRawrecord() {
        return (Long)readProperty(RAWRECORD_PROPERTY);
    }

    public void setValue(Double value) {
        writeProperty(VALUE_PROPERTY, value);
    }
    public Double getValue() {
        return (Double)readProperty(VALUE_PROPERTY);
    }

    public void setWhenmeasured(Date whenmeasured) {
        writeProperty(WHENMEASURED_PROPERTY, whenmeasured);
    }
    public Date getWhenmeasured() {
        return (Date)readProperty(WHENMEASURED_PROPERTY);
    }

    public void addToMeasureAudit(AuditMeasure obj) {
        addToManyTarget(MEASURE_AUDIT_PROPERTY, obj, true);
    }
    public void removeFromMeasureAudit(AuditMeasure obj) {
        removeToManyTarget(MEASURE_AUDIT_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditMeasure> getMeasureAudit() {
        return (List<AuditMeasure>)readProperty(MEASURE_AUDIT_PROPERTY);
    }


    public void setMeasureCategory(Category measureCategory) {
        setToOneTarget(MEASURE_CATEGORY_PROPERTY, measureCategory, true);
    }

    public Category getMeasureCategory() {
        return (Category)readProperty(MEASURE_CATEGORY_PROPERTY);
    }


    public void setMeasureField(RawTableField measureField) {
        setToOneTarget(MEASURE_FIELD_PROPERTY, measureField, true);
    }

    public RawTableField getMeasureField() {
        return (RawTableField)readProperty(MEASURE_FIELD_PROPERTY);
    }


    public void setMeasureMachine(Machine measureMachine) {
        setToOneTarget(MEASURE_MACHINE_PROPERTY, measureMachine, true);
    }

    public Machine getMeasureMachine() {
        return (Machine)readProperty(MEASURE_MACHINE_PROPERTY);
    }


    public void addToMeasureName(NameMeasure obj) {
        addToManyTarget(MEASURE_NAME_PROPERTY, obj, true);
    }
    public void removeFromMeasureName(NameMeasure obj) {
        removeToManyTarget(MEASURE_NAME_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NameMeasure> getMeasureName() {
        return (List<NameMeasure>)readProperty(MEASURE_NAME_PROPERTY);
    }


    public void setMeasurePlace(Place measurePlace) {
        setToOneTarget(MEASURE_PLACE_PROPERTY, measurePlace, true);
    }

    public Place getMeasurePlace() {
        return (Place)readProperty(MEASURE_PLACE_PROPERTY);
    }


    public void setMeasureType(DataType measureType) {
        setToOneTarget(MEASURE_TYPE_PROPERTY, measureType, true);
    }

    public DataType getMeasureType() {
        return (DataType)readProperty(MEASURE_TYPE_PROPERTY);
    }


}
