package be.labo.data.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import be.labo.data.AuditAlert;
import be.labo.data.AuditEvent;
import be.labo.data.AuditGroup;
import be.labo.data.AuditMachine;
import be.labo.data.AuditMeasure;
import be.labo.data.AuditNetwork;
import be.labo.data.AuditScaling;
import be.labo.data.AuditType;
import be.labo.data.AuditUser;
import be.labo.data.User;

/**
 * Class _Audit was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Audit extends CayenneDataObject {

    public static final String VIA_PROPERTY = "via";
    public static final String WHENCHANGED_PROPERTY = "whenchanged";
    public static final String WHYCHANGED_PROPERTY = "whychanged";
    public static final String ACTOR_PROPERTY = "actor";
    public static final String AUDITALERT_PROPERTY = "auditalert";
    public static final String AUDITEVENT_PROPERTY = "auditevent";
    public static final String AUDITGROUP_PROPERTY = "auditgroup";
    public static final String AUDITMACHINE_PROPERTY = "auditmachine";
    public static final String AUDITMEASURE_PROPERTY = "auditmeasure";
    public static final String AUDITNETWORK_PROPERTY = "auditnetwork";
    public static final String AUDITSCALING_PROPERTY = "auditscaling";
    public static final String AUDITTYPE_PROPERTY = "audittype";
    public static final String AUDITUSER_PROPERTY = "audituser";

    public static final String ID_PK_COLUMN = "id";

    public void setVia(Byte via) {
        writeProperty(VIA_PROPERTY, via);
    }
    public Byte getVia() {
        return (Byte)readProperty(VIA_PROPERTY);
    }

    public void setWhenchanged(Date whenchanged) {
        writeProperty(WHENCHANGED_PROPERTY, whenchanged);
    }
    public Date getWhenchanged() {
        return (Date)readProperty(WHENCHANGED_PROPERTY);
    }

    public void setWhychanged(String whychanged) {
        writeProperty(WHYCHANGED_PROPERTY, whychanged);
    }
    public String getWhychanged() {
        return (String)readProperty(WHYCHANGED_PROPERTY);
    }

    public void setActor(User actor) {
        setToOneTarget(ACTOR_PROPERTY, actor, true);
    }

    public User getActor() {
        return (User)readProperty(ACTOR_PROPERTY);
    }


    public void addToAuditalert(AuditAlert obj) {
        addToManyTarget(AUDITALERT_PROPERTY, obj, true);
    }
    public void removeFromAuditalert(AuditAlert obj) {
        removeToManyTarget(AUDITALERT_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditAlert> getAuditalert() {
        return (List<AuditAlert>)readProperty(AUDITALERT_PROPERTY);
    }


    public void addToAuditevent(AuditEvent obj) {
        addToManyTarget(AUDITEVENT_PROPERTY, obj, true);
    }
    public void removeFromAuditevent(AuditEvent obj) {
        removeToManyTarget(AUDITEVENT_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditEvent> getAuditevent() {
        return (List<AuditEvent>)readProperty(AUDITEVENT_PROPERTY);
    }


    public void addToAuditgroup(AuditGroup obj) {
        addToManyTarget(AUDITGROUP_PROPERTY, obj, true);
    }
    public void removeFromAuditgroup(AuditGroup obj) {
        removeToManyTarget(AUDITGROUP_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditGroup> getAuditgroup() {
        return (List<AuditGroup>)readProperty(AUDITGROUP_PROPERTY);
    }


    public void addToAuditmachine(AuditMachine obj) {
        addToManyTarget(AUDITMACHINE_PROPERTY, obj, true);
    }
    public void removeFromAuditmachine(AuditMachine obj) {
        removeToManyTarget(AUDITMACHINE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditMachine> getAuditmachine() {
        return (List<AuditMachine>)readProperty(AUDITMACHINE_PROPERTY);
    }


    public void addToAuditmeasure(AuditMeasure obj) {
        addToManyTarget(AUDITMEASURE_PROPERTY, obj, true);
    }
    public void removeFromAuditmeasure(AuditMeasure obj) {
        removeToManyTarget(AUDITMEASURE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditMeasure> getAuditmeasure() {
        return (List<AuditMeasure>)readProperty(AUDITMEASURE_PROPERTY);
    }


    public void addToAuditnetwork(AuditNetwork obj) {
        addToManyTarget(AUDITNETWORK_PROPERTY, obj, true);
    }
    public void removeFromAuditnetwork(AuditNetwork obj) {
        removeToManyTarget(AUDITNETWORK_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditNetwork> getAuditnetwork() {
        return (List<AuditNetwork>)readProperty(AUDITNETWORK_PROPERTY);
    }


    public void addToAuditscaling(AuditScaling obj) {
        addToManyTarget(AUDITSCALING_PROPERTY, obj, true);
    }
    public void removeFromAuditscaling(AuditScaling obj) {
        removeToManyTarget(AUDITSCALING_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditScaling> getAuditscaling() {
        return (List<AuditScaling>)readProperty(AUDITSCALING_PROPERTY);
    }


    public void addToAudittype(AuditType obj) {
        addToManyTarget(AUDITTYPE_PROPERTY, obj, true);
    }
    public void removeFromAudittype(AuditType obj) {
        removeToManyTarget(AUDITTYPE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditType> getAudittype() {
        return (List<AuditType>)readProperty(AUDITTYPE_PROPERTY);
    }


    public void addToAudituser(AuditUser obj) {
        addToManyTarget(AUDITUSER_PROPERTY, obj, true);
    }
    public void removeFromAudituser(AuditUser obj) {
        removeToManyTarget(AUDITUSER_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditUser> getAudituser() {
        return (List<AuditUser>)readProperty(AUDITUSER_PROPERTY);
    }


}
