package be.labo.data.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;

import be.labo.data.AlertMessage;
import be.labo.data.AuditGroup;
import be.labo.data.Event;
import be.labo.data.Graphconfig;
import be.labo.data.NameGroup;
import be.labo.data.Permission;
import be.labo.data.User;
import be.labo.data.UserGroup;

/**
 * Class _GroupOfUsers was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _GroupOfUsers extends CayenneDataObject {

    public static final String ACTIVE_PROPERTY = "active";
    public static final String EMAIL_PROPERTY = "email";
    public static final String GSM_PROPERTY = "gsm";
    public static final String GROUP_ALERT_MESSAGE_PROPERTY = "groupAlertMessage";
    public static final String GROUP_EVENT_PROPERTY = "groupEvent";
    public static final String GROUP_PERMISSION_PROPERTY = "groupPermission";
    public static final String GROUPAUDIT_PROPERTY = "groupaudit";
    public static final String GROUPGRAPH_PROPERTY = "groupgraph";
    public static final String GROUPNAME_PROPERTY = "groupname";
    public static final String GROUPUSER_PROPERTY = "groupuser";
    public static final String USERS_PROPERTY = "users";

    public static final String ID_PK_COLUMN = "id";

    public void setActive(Boolean active) {
        writeProperty(ACTIVE_PROPERTY, active);
    }
    public Boolean getActive() {
        return (Boolean)readProperty(ACTIVE_PROPERTY);
    }

    public void setEmail(String email) {
        writeProperty(EMAIL_PROPERTY, email);
    }
    public String getEmail() {
        return (String)readProperty(EMAIL_PROPERTY);
    }

    public void setGsm(String gsm) {
        writeProperty(GSM_PROPERTY, gsm);
    }
    public String getGsm() {
        return (String)readProperty(GSM_PROPERTY);
    }

    public void addToGroupAlertMessage(AlertMessage obj) {
        addToManyTarget(GROUP_ALERT_MESSAGE_PROPERTY, obj, true);
    }
    public void removeFromGroupAlertMessage(AlertMessage obj) {
        removeToManyTarget(GROUP_ALERT_MESSAGE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AlertMessage> getGroupAlertMessage() {
        return (List<AlertMessage>)readProperty(GROUP_ALERT_MESSAGE_PROPERTY);
    }


    public void addToGroupEvent(Event obj) {
        addToManyTarget(GROUP_EVENT_PROPERTY, obj, true);
    }
    public void removeFromGroupEvent(Event obj) {
        removeToManyTarget(GROUP_EVENT_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Event> getGroupEvent() {
        return (List<Event>)readProperty(GROUP_EVENT_PROPERTY);
    }


    public void addToGroupPermission(Permission obj) {
        addToManyTarget(GROUP_PERMISSION_PROPERTY, obj, true);
    }
    public void removeFromGroupPermission(Permission obj) {
        removeToManyTarget(GROUP_PERMISSION_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Permission> getGroupPermission() {
        return (List<Permission>)readProperty(GROUP_PERMISSION_PROPERTY);
    }


    public void addToGroupaudit(AuditGroup obj) {
        addToManyTarget(GROUPAUDIT_PROPERTY, obj, true);
    }
    public void removeFromGroupaudit(AuditGroup obj) {
        removeToManyTarget(GROUPAUDIT_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuditGroup> getGroupaudit() {
        return (List<AuditGroup>)readProperty(GROUPAUDIT_PROPERTY);
    }


    public void setGroupgraph(Graphconfig groupgraph) {
        setToOneTarget(GROUPGRAPH_PROPERTY, groupgraph, true);
    }

    public Graphconfig getGroupgraph() {
        return (Graphconfig)readProperty(GROUPGRAPH_PROPERTY);
    }


    public void addToGroupname(NameGroup obj) {
        addToManyTarget(GROUPNAME_PROPERTY, obj, true);
    }
    public void removeFromGroupname(NameGroup obj) {
        removeToManyTarget(GROUPNAME_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NameGroup> getGroupname() {
        return (List<NameGroup>)readProperty(GROUPNAME_PROPERTY);
    }


    public void addToGroupuser(UserGroup obj) {
        addToManyTarget(GROUPUSER_PROPERTY, obj, true);
    }
    public void removeFromGroupuser(UserGroup obj) {
        removeToManyTarget(GROUPUSER_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<UserGroup> getGroupuser() {
        return (List<UserGroup>)readProperty(GROUPUSER_PROPERTY);
    }


    public void addToUsers(User obj) {
        addToManyTarget(USERS_PROPERTY, obj, true);
    }
    public void removeFromUsers(User obj) {
        removeToManyTarget(USERS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<User> getUsers() {
        return (List<User>)readProperty(USERS_PROPERTY);
    }


}
